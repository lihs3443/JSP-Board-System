/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-11-06 11:26:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;

public final class reporting_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\", initial-scale=\"1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n");
      out.write("<title>JSP 신고</title>\r\n");
      out.write("	<style type=\"text/css\">\r\n");
      out.write("		.report_list li{\r\n");
      out.write("			list-style: none;\r\n");
      out.write("			border-top: 1px solid silver;\r\n");
      out.write("			border-right: 1px solid silver;\r\n");
      out.write("			border-left: 1px solid silver;\r\n");
      out.write("			margin-right: 40px;\r\n");
      out.write("}\r\n");
      out.write("		.report_item input{\r\n");
      out.write("		border: max(2px, 0.1em);\r\n");
      out.write("		width: 2em;\r\n");
      out.write("  		height: 2em;\r\n");
      out.write("  		cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("		.report_item label{\r\n");
      out.write("		font-size: 25px;\r\n");
      out.write("		font-weight: normal;\r\n");
      out.write("		cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

		String user1name="";
		String user2name="";
		String userID = null;
		if(session.getAttribute("userID") != null){
			userID = (String)session.getAttribute("userID");
		}

		if(request.getParameter("user2name") == null) {
			PrintWriter script = response.getWriter();
			script.println("<script>");
			script.println("alert('유효하지 않은 글입니다')");
			script.println("window.close()");
			script.println("</script>");
		}
		else {
			user1name=request.getParameter("user1name");
			user2name=request.getParameter("user2name");
		}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<nav class=\"navbar navbar-default\"> <!-- 웹사이트 전반적인 구성 -->\r\n");
      out.write("		<div class=\"navbar-header\" style=\"width: 100%; display: flex;\"> <!-- 로고같은 것을 담는 영역 -->\r\n");
      out.write("			<h1 style=\"text-align: center; width: 99%;\">신고하기</h1>\r\n");
      out.write("			<button type=\"button\" value=\"X\" onclick=\"window.close()\" style=\"background: none; border: none;\"><h1>X</h1></button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<div class=\"report\">\r\n");
      out.write("		<form method=\"post\" action=\"reportAction.jsp?user1name=");
      out.print(user1name);
      out.write("&user2name=");
      out.print(user2name);
      out.write("\">\r\n");
      out.write("			<div style=\"padding-bottom: 15px; border-bottom: 1px solid silver;\">\r\n");
      out.write("				<span style=\"margin:20px; margin-left: 40px; margin-right:0px; font-size: 25px; font-weight: 600\">작성자</span>\r\n");
      out.write("				<span style=\"margin:20px; margin-right:40px; margin-left:0px; font-size: 25px;\"> : ");
      out.print(user2name );
      out.write("</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<ul class=\"report_list\">\r\n");
      out.write("				<li style=\"border: none; margin-top: 20px;\"><p style=\"font-size: 25px; font-weight: 600\">신고 사유 선택</p></li>\r\n");
      out.write("				<li>\r\n");
      out.write("					<div class=\"report_item\">\r\n");
      out.write("						<input type=\"radio\" id=\"1\" name=\"report_type\" value=\"1\" checked=\"checked\">\r\n");
      out.write("						<label for=\"1\">스팸</label>		\r\n");
      out.write("					</div>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>\r\n");
      out.write("					<div class=\"report_item\">\r\n");
      out.write("						<input type=\"radio\" id=\"2\" name=\"report_type\" value=\"2\">\r\n");
      out.write("						<label for=\"2\">음란물</label>		\r\n");
      out.write("					</div>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>\r\n");
      out.write("					<div class=\"report_item\">\r\n");
      out.write("						<input type=\"radio\" id=\"3\" name=\"report_type\" value=\"3\">\r\n");
      out.write("						<label for=\"3\">거짓 정보</label>			\r\n");
      out.write("					</div>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>\r\n");
      out.write("					<div class=\"report_item\">\r\n");
      out.write("						<input type=\"radio\" id=\"4\" name=\"report_type\" value=\"4\">\r\n");
      out.write("						<label for=\"4\">혐오 발언</label>			\r\n");
      out.write("					</div>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li style=\"border-bottom: 1px solid silver;\">\r\n");
      out.write("					<div class=\"report_item\">\r\n");
      out.write("						<input type=\"radio\" id=\"5\" name=\"report_type\" value=\"5\">\r\n");
      out.write("						<label for=\"5\">욕설 및 폭언</label>		\r\n");
      out.write("					</div>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li style=\"border: none; margin-top: 40px;\"><input type=\"submit\" class=\"btn btn-primary\" value=\"신고하기\" style=\"width: 100%; font-size: 30px;\"></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script src=\"http://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("	<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
