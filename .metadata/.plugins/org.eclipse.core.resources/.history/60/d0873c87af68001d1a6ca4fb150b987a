// DAO 데이터베이스 접근 객체
// 회원정보 입출력용

package user;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class UserDAO {
	private Connection conn;
	private PreparedStatement pstmt; // 해킹기법을 방어하기 위한 수단
	private ResultSet rs;
	
	// mysqㅣ 접속
	public UserDAO(){ 
		try {
			String dbURL = "jdbc:mysql://localhost:3306/BBS";
			String dbID = "bbs";
			String dbPassword = "1234";
			Class.forName("com.mysql.jdbc.Driver"); // mysql에 접속하게 해주는 라이브러리 매개체
			conn = DriverManager.getConnection(dbURL,dbID,dbPassword);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	// 로그인 함수
	public int login(String userID, String userPassword){
		String SQL = "select userPassword from user where userID = ?;";
		try {
			pstmt = conn.prepareStatement(SQL);
			pstmt.setString(1, userID); // 입력한 아이디를 쿼리에 입력
			rs = pstmt.executeQuery(); // 아이디가 있다면 결과 저장
			if (rs.next()) {
				if(rs.getString(1).equals(userPassword)){
					return 1; // 로그인 성공
				}
				else {
					return 0; // 비밀번호 불일치
				}
			}
			return -1; // 아이디 없음
		} catch (Exception e) {
			e.printStackTrace();
		}
		return -2; // 데이터베이스 오류
	}
	
	// 회원가입 함수
	public int join(User user) {
		String SQL = "insert into user values(?,?,?,?,?);"; // insert문은 반드시 0 이상의 숫자를 반환함
		try {
			pstmt = conn.prepareStatement(SQL);
			pstmt.setString(1, user.getUserID());
			pstmt.setString(2, user.getUserPassword());
			pstmt.setString(3, user.getUserName());
			pstmt.setString(4, user.getUserGender());
			pstmt.setString(5, user.getUserEmail());
			return pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return -1;
	}
	
	public User getUser(String userID) {
		String SQL = "select * from user where userID=?;";
		User user = new User();
		try {
			pstmt = conn.prepareStatement(SQL);
			pstmt.setString(1, userID);
			rs = pstmt.executeQuery();
			rs.next();
			user.setUserID(rs.getString(1));
			user.setUserPassword(rs.getString(2));
			user.setUserName(rs.getString(3));
			user.setUserGender(rs.getString(4));
			user.setUserEmail(rs.getString(5));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return user;
	}
	
	public ArrayList<User> getUser() {
		String SQL = "select * from user where userID=?;";
		ArrayList<User> user = new ArrayList<User>();
		try {
			pstmt = conn.prepareStatement(SQL);
			pstmt.setString(1, userID);
			rs = pstmt.executeQuery();
			rs.next();
			user.setUserID(rs.getString(1));
			user.setUserPassword(rs.getString(2));
			user.setUserName(rs.getString(3));
			user.setUserGender(rs.getString(4));
			user.setUserEmail(rs.getString(5));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return user;
	}
}

